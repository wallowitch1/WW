apiVersion: v1
kind: Secret
metadata:
  name: db-root-secret
type: Opaque
data:
  dbrootpw: dGVzdHRlc3Q=
  dbname: RGphbmdvX2NvbW11aXR5
  dbpw: dGVzdHRlc3Q=
  dbuser: RGphbmdvX2NvbW11aXR5  

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  dbpw: dGVzdHRlc3Q=
  dbuser: RGphbmdvX2NvbW11aXR5
  dbhost: dGVzdHRlc3Q=
  dbname: RGphbmdvX2NvbW11aXR5

---
# Django 웹 서버
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-deployment
  labels:
    app: devops-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devops-web
  template:
    metadata:
      labels:
        app: devops-web
    spec:
      containers:
      - name: devops-web
        image: wallowitch2/devops_web
        ports:
        - containerPort: 8000
---
# Django 데이터베이스 서버
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: devops-db-statefulset
spec:
  replicas: 2
  serviceName: "devops-db-service" 
  selector:
    matchLabels:
      app: devops-db
  template:
    metadata:
      labels:
        app: devops-db
    spec:
      containers:
      - name: devops-db
        image: mariadb:11.0.2
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key: MYSQL_DATABASE
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi 

---
apiVersion: v1
kind: Service
metadata:
 name: devops-svc-nodeport
spec:
 type: NodePort
 ports:
 - port: 8080
   targetPort: 8000
   nodePort: 30080
 selector:
   app: devops-web
