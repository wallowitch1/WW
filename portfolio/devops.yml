apiVersion: v1
kind: Secret
metadata:
  name: db-root-secret
type: Opaque
data:
  dbrootpw: dGVzdHRlc3Q=
  dbname: RGphbmdvX2NvbW11aXR5
  dbpw: dGVzdA==
  dbuser: dXNlcg==

---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  dbpw: dGVzdA==
  dbuser: dXNlcg==
  dbhost: ZGV2b3BzLWRiLXNlcnZpY2U=
  dbname: RGphbmdvX2NvbW11aXR5

---
# 각 워커노드에 /devops-db 디렉토리 생성
# sudo mkdir /devops-db
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
spec:
  capacity:
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName:
  hostPath:
    path: /devops-db

---
# Django 웹 서버
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devops-deployment
  labels:
    app: devops-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: devops-web
  template:
    metadata:
      labels:
        app: devops-web
    spec:
      containers:
      - name: devops-web
        image: wallowitch2/devops_web
        ports:
        - containerPort: 8000
---
# Django 데이터베이스 서버
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: devops-db-statefulset
spec:
  replicas: 2
  serviceName: "devops-db-service" 
  selector:
    matchLabels:
      app: devops-db
  template:
    metadata:
      labels:
        app: devops-db
    spec:
      containers:
      - name: devops-db
        image: mariadb:11.0.2
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key:dbrootpw
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key: dbname
        - name: MYSQL_USER_NAME
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key: dbuser
        - name: MYSQL_USER_PW
          valueFrom:
            secretKeyRef:
              name: db-root-secret
              key: dbuserpw
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        command:
        - sh
        - -c
        - "mysql -uroot -p$MYSQL_ROOT_PASSWORD -e 'CREATE DATABASE IF NOT EXISTS Django_community; CREATE USER IF NOT EXISTS `$MYSQL_USER_NAME`@`%` IDENTIFIED BY `$MYSQL_USER_PW`; GRANT ALL ON Django_community.* TO `$MYSQL_USER_NAME`@`%`; FLUSH PRIVILEGES;'; /usr/bin/mysqld"
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi 

---
apiVersion: v1
kind: Service
metadata:
 name: devops-svc-nodeport
spec:
 type: NodePort
 ports:
 - port: 8080
   targetPort: 8000
   nodePort: 30080
 selector:
   app: devops-web

---
apiVersion: v1
kind: Service
metadata:
  name: devops-db-service
spec:
  selector:
    app: devops-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306